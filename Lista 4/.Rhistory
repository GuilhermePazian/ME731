install.packages("dplyr")
library(dplyr)
db_tart <- read.csv("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt")
View(db_tart)
db_tart <- read.csv("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt", sep = "\t")
View(db_tart)
db_tart <- read.csv2("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt", sep = "\t")
db_tart <- read.csv2("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt")
install.packages("tidyverse")
install.packages("tidyverse")
db_tart <- read.c
db_tart <- read_csv("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt")
db_tart <- read.table("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt"
db_tart <- read.table("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt")
db_tart <- read.table("http://www.ime.unicamp.br/~cnaber/Jolicoueur%20and%20Mosimann%20Tartarugas.txt")
View(db_tart)
library(MASS)
library(car)
library(xtable)
install.packages("car")
library(dplyr)
library(tidyverse)
library(MASS)
library(car)
library(xtable)
# Analisando o comportamento das componentes principais
par(mfrow=c(2,2))
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,0,0, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = 0")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = 0")
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,0.3,0.3, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = 0,3")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = 0,3")
#
par(mfrow=c(2,2))
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,0.7,0.7, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = 0,7")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = 0,7")
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,0.9,0.9, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = 0,9")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = 0,9")
#
par(mfrow=c(2,2))
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,-0.7,-0.7, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = -0,7")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = -0,7")
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,-0.9,-0.9, 1), 2))
plot(m.X,xlim=c(-4,4),ylim=c(-4,4),xlab="variável 1",ylab="variável 2",cex=1.2,cex.lab=1.2,cex.main=1.2,main="Correlação = -0,9")
m.Y <- princomp(m.X,cor=T)$scores
plot(m.Y,xlim=c(-4,4),ylim=c(-4,4),xlab="componente principal 1",ylab="componente principal 2",cex=1.2,main="Correlação = -0,9")
View(m.X)
m.X <- mvrnorm(1000, mu = c(0, 0), Sigma = matrix(c(1,0,0, 1), 2))
m.X
plot(db_tart)
plot(db_tart)
pairs(db_tart)
plot(db_tart$V1, db_tart$V2)
plot(db_tart$V1, db_tart$V2)
plot(db_tart)
pairs(db_tart)
pairs(db_tart)
colnames(db_tart)<-c("Var1","Var2","Var3","Var4")
View(db_tart)
colnames(db_tart)<-c("Var1","Var2","Var3","Var4", "Var5", "var6")
#
medados<- rbind(apply(USArrests,2,mean),apply(USArrests,2,var),apply(USArrests,2,sd),100*apply(USArrests,2,sd)/apply(USArrests,2,mean),apply(USArrests,2,min),apply(USArrests,2,quantile,0.5),apply(USArrests,2,max))
plot(USArrests,cex=1.2)
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
xtable(medados)
# Diagrama de dispersão
plot(USArrests,cex=1.2)
plot(USArrests,cex=1.2)
plot(USArrests,cex=1.2)
cov(USArrests)
cor(USArrests)
#
#
par(mfrow=c(1,1))
boxplot(USArrests,cex=1.2,cex.lab=1.2,xlab="variável")
estat(db_tart)
estat <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
return(medados)
}
estat(db_tart)
#Covâriancia
cov(db_tart)
cor(db_tart)
boxplot(db_tart,cex=1.2,cex.lab=1.2,xlab="variável")
hist.graf <- function(db, i){
hist(db[,i],probability=TRUE,main="Assassinato",xlab="",ylab="")
}
hist.graf(db, 1)
hist.graf(db_tart, 1)
hist.graf(db_tart, 1)
hist(USArrests[,1],probability=TRUE,main="Assassinato",xlab="",ylab="")
hist(db_tart[,1],probability=TRUE,main="Assassinato",xlab="",ylab="")
qqPlot(scale(db_tart[,1]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="V1",cex=1.2,id.cex=1.2)
###############################
# ACP Correlação e Covariancia
res_screen <- function(db){
p <- ncol(db)
m.cov<-cov(db)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(diag(sqrt(m.cov)),p,p))
result.cp.cov <- princomp(db,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
sum.res <- summary(result.cp.cov)
return(sum.res)
}
res_screen(db)
###############################
# ACP Correlação e Covariancia
res_screen <- function(db){
p <- ncol(db)
m.cov<-cov(db)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(diag(sqrt(m.cov)),p,p))
result.cp.cov <- princomp(db,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
sum.res <- summary(result.cp.cov)
return(sum.res)
}
res_screen(db_tart)
res_screen(db_tart)
resumo_acp <- res_screen(db_tart)
screeplot(resumo_acp,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
#comp.princ <- t((t(aut.vec))%*%t(USArrests))
cp1 <-  -cbind((result.cp.cor$scores)[,1])
#comp.princ <- t((t(aut.vec))%*%t(USArrests))
cp1 <-  -cbind((resumo_acp$scores)[,1])
cp2 <-  -cbind((resumo_acp$scores)[,2])
nomes <- rownames(USArrests)
nomes <- rownames(db_tart)
nomes <- rownames(db_tart)
par(mfrow=c(1,1))
plot(cp1,cp2,cex=1.2)
#identify(cp1,cp2,n=50,labels=estados)
text(cp1, cp2, labels=nomes, cex= 0.7)
biplot(resumo_acp,xlim=c(-0.3,0.4))
resumo_acp
p <- ncol(db_tart)
m.cov<-cov(db_tart)
aut.val <-  eigen(m.cov)$values
aut.vec <- -(eigen(m.cov)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
m.dp.var <-  (matrix(diag(sqrt(m.cov)),p,p))
result.cp.cov <- princomp(db_tart,cor=FALSE)
corr.cp.var <- aut.vec*sqrt(m.aut.val)/m.dp.var
sum.res <- summary(result.cp.cov)
screeplot(sum.res,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
biplot( result.cp.cov,xlim=c(-0.3,0.4))
result.cp.cov
biplot( result.cp.cov,xlim=c(-0.3,0.4))
biplot( result.cp.cov,xlim=c(-0.3,0.4))
cp1 <-  -cbind((sum.res$scores)[,1])
cp2 <-  -cbind((sum.res$scores)[,2])
cp1
cp2
biplot( result.cp.cov,xlim=c(-0.3,0.4))
#Função para carregar os pacotes e instalar
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("dplyr", "tidyverse", "MASS", "car", "xtable")
ipak(packages)
diag2norm<-function(fit.model){
# fit.model: objeto com o ajuste do modelo normal linear homocedástico
# obtido através da função "lm"
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X%*%solve(t(X)%*%X)%*%t(X)
h <- diag(H)
lms <- summary(fit.model)
s <- lms$sigma
r <- resid(lms)
ts <- r/(s*sqrt(1-h))
di <- (1/p)*(h/(1-h))*(ts^2)
si <- lm.influence(fit.model)$sigma
tsi <- r/(si*sqrt(1-h))
tam <- 1:length(tsi)
a <- max(tsi)
b <- min(tsi)
g1 = ggplot(data=data.frame(tam,tsi),aes(tam,tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Índice")+labs(title="A")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
g2 =  ggplot(data=data.frame(fitted(fit.model),tsi),aes(fitted(fit.model),tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Valores Ajustados")+labs(title="B")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
#Histograma
g3 = ggplot(data=data.frame(tsi),aes(tsi,col=I("black"),fill=I("white")))+geom_histogram(binwidth = 1,aes(y=..density..))+labs(title="C",x="Resíduo Studentizado",y="Densidade")+theme_light()
#Boxplot
g4 = ggplot(data=data.frame(fac = factor(1),tsi),aes(fac,tsi,col=I("black"),fill=I("white")))+ geom_boxplot(outlier.size = 1.5, outlier.colour = "red",width=0.4)+labs(title="D")+scale_x_discrete(name="")+scale_y_continuous(name = "Residuo Studentizado")+theme(axis.text.x = element_blank())+theme_light()
#funcao que une todos os gráficos
grid.arrange(g1,g2,g3,g4,ncol=2,nrow=2)
}
tab_esta <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
return(medados)
}
#Tabela resumo com médias, variancias, quartils...
tab_esta <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
return(medados)
}
install.packages("mice")
library(mice)
iris
data <- iris
data
tab_esta(data)
source("Scripts.R")
#Análises descritivas - Medidas resumo
tab_esta(data)
#Análises descritivas - Medidas resumo
tab_estat(data)
source("Scripts.R")
#data <- read.table(file = file.choose(), header = T)
#Neste exemplo trabalharei com os dados "iris"
data <- iris
#Análises descritivas - Medidas resumo
tab_estat(data)
#Análises descritivas - Medidas resumo
tab_esta(data)
#Análises descritivas - Medidas resumo
tab_esta(data)
tab_estat <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
return(medados)
}
View(data)
View(data)
tab_esta(data[c(-5)])
tab_esta(data[c(-5)])
#Gráfico de resíduos
diag2norm<-function(fit.model){
# fit.model: objeto com o ajuste do modelo normal linear homocedástico
# obtido através da função "lm"
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X%*%solve(t(X)%*%X)%*%t(X)
h <- diag(H)
lms <- summary(fit.model)
s <- lms$sigma
r <- resid(lms)
ts <- r/(s*sqrt(1-h))
di <- (1/p)*(h/(1-h))*(ts^2)
si <- lm.influence(fit.model)$sigma
tsi <- r/(si*sqrt(1-h))
tam <- 1:length(tsi)
a <- max(tsi)
b <- min(tsi)
g1 = ggplot(data=data.frame(tam,tsi),aes(tam,tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Índice")+labs(title="A")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
g2 =  ggplot(data=data.frame(fitted(fit.model),tsi),aes(fitted(fit.model),tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Valores Ajustados")+labs(title="B")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
#Histograma
g3 = ggplot(data=data.frame(tsi),aes(tsi,col=I("black"),fill=I("white")))+geom_histogram(binwidth = 1,aes(y=..density..))+labs(title="C",x="Resíduo Studentizado",y="Densidade")+theme_light()
#Boxplot
g4 = ggplot(data=data.frame(fac = factor(1),tsi),aes(fac,tsi,col=I("black"),fill=I("white")))+ geom_boxplot(outlier.size = 1.5, outlier.colour = "red",width=0.4)+labs(title="D")+scale_x_discrete(name="")+scale_y_continuous(name = "Residuo Studentizado")+theme(axis.text.x = element_blank())+theme_light()
#funcao que une todos os gráficos
grid.arrange(g1,g2,g3,g4,ncol=2,nrow=2)
}
#Tabela resumo com médias, variancias, quartils...
tab_esta <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Mínimo","Mediana","Máximo")
return(medados)
}
tab_esta(data[c(-5)])
source("Scripts.R")
#data <- read.table(file = file.choose(), header = T)
#Neste exemplo trabalharei com os dados "iris"
data <- iris
#Análises descritivas - Medidas resumo
tab_esta(data[c(-5)])
#Tabela resumo com médias, variancias, quartils...
tab_esta <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Minimo","Mediana","Maximo")
return(medados)
}
source("Scripts.R")
#data <- read.table(file = file.choose(), header = T)
#Neste exemplo trabalharei com os dados "iris"
data <- iris
#Análises descritivas - Medidas resumo
tab_esta(data[c(-5)])
#Tabela resumo com médias, variancias, quartils...
tab_estat <- function(db){
medados <- rbind(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Minimo","Mediana","Maximo")
return(medados)
}
#Tabela resumo com médias, variancias, quartils...
tab_estat <- function(db){
medados <- rbind(round(apply(db,2,mean),apply(db,2,var),apply(db,2,sd),100*apply(db,2,sd)/apply(db,2,mean),apply(db,2,min),apply(db,2,quantile,0.5),apply(db,2,max),3))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Minimo","Mediana","Maximo")
return(medados)
}
#Análises descritivas - Medidas resumo
tab_estat(data[c(-5)])
#Análises descritivas - Medidas resumo
tab_estat(data[c(-5)])
#Tabela resumo com médias, variancias, quartils...
tab_estat <- function(db){
medados <- rbind(round(apply(db,2,mean),3),
round(apply(db,2,var),3),
round(apply(db,2,sd),3),
round(100*apply(db,2,sd)/apply(db,2,mean),3),
round(apply(db,2,min),3),
round(apply(db,2,quantile,0.5),3),
round(apply(db,2,max),3))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Minimo","Mediana","Maximo")
return(medados)
}
#Gráfico de resíduos
diag2norm<-function(fit.model){
# fit.model: objeto com o ajuste do modelo normal linear homocedástico
# obtido através da função "lm"
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
H <- X%*%solve(t(X)%*%X)%*%t(X)
h <- diag(H)
lms <- summary(fit.model)
s <- lms$sigma
r <- resid(lms)
ts <- r/(s*sqrt(1-h))
di <- (1/p)*(h/(1-h))*(ts^2)
si <- lm.influence(fit.model)$sigma
tsi <- r/(si*sqrt(1-h))
tam <- 1:length(tsi)
a <- max(tsi)
b <- min(tsi)
g1 = ggplot(data=data.frame(tam,tsi),aes(tam,tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Índice")+labs(title="A")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
g2 =  ggplot(data=data.frame(fitted(fit.model),tsi),aes(fitted(fit.model),tsi))+ geom_point() +scale_y_continuous(name = "Resíduo Studentizado",limits=c(b-1,a+1)) +scale_x_continuous(name = "Valores Ajustados")+labs(title="B")+geom_hline(yintercept=0,size=0.25,linetype=2)+geom_hline(yintercept=2,size=0.25,linetype=2)+geom_hline(yintercept=-2,size=0.25,linetype=2)+theme_light()
#Histograma
g3 = ggplot(data=data.frame(tsi),aes(tsi,col=I("black"),fill=I("white")))+geom_histogram(binwidth = 1,aes(y=..density..))+labs(title="C",x="Resíduo Studentizado",y="Densidade")+theme_light()
#Boxplot
g4 = ggplot(data=data.frame(fac = factor(1),tsi),aes(fac,tsi,col=I("black"),fill=I("white")))+ geom_boxplot(outlier.size = 1.5, outlier.colour = "red",width=0.4)+labs(title="D")+scale_x_discrete(name="")+scale_y_continuous(name = "Residuo Studentizado")+theme(axis.text.x = element_blank())+theme_light()
#funcao que une todos os gráficos
grid.arrange(g1,g2,g3,g4,ncol=2,nrow=2)
}
#Tabela resumo com médias, variancias, quartils...
tab_estat <- function(db){
medados <- rbind(round(apply(db,2,mean),3),
round(apply(db,2,var),3),
round(apply(db,2,sd),3),
round(100*apply(db,2,sd)/apply(db,2,mean),3),
round(apply(db,2,min),3),
round(apply(db,2,quantile,0.5),3),
round(apply(db,2,max),3))
rownames(medados)<-c("Média","Var.","DP","CV(%)","Minimo","Mediana","Maximo")
return(medados)
}
source("Scripts.R")
#data <- read.table(file = file.choose(), header = T)
#Neste exemplo trabalharei com os dados "iris"
data <- iris
#Análises descritivas - Medidas resumo
tab_estat(data[c(-5)])
especie <- iris[,5] #Coluna com os nomes de cada grupo
data <- iris
n <- nrow(data)
mx <- as.matrix(data[,1:4])
nvar <- length(mx)
length(mx)
tab_estat(mx) #Colocar sempre sem as variaveis nominais - senão ERRO
irisaux <- iris
colnames(irisaux)<-c("CS","LS","CP","LP","Especie")
irisd <- iris[,1:4]
colnames(irisd)<-c("CS","LS","CP","LP")
